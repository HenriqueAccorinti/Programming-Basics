def gera_encriptador(encriptador):
    """preenche o dicionário com os caracteres encriptadores"""
    letras = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    caracteres_nao_utilizados = " ,.;\n\t"
    for c in caracteres_nao_utilizados:
        encriptador[c] = c
    for c in letras:
        aux = input("Digite o caracter secreto para a letra %s: " %c)
        while aux in encriptador.values():
            aux = input("Você já digitou este caracter. Digite o caracter secreto para a letra %s: " %c)
        encriptador[c] = aux
        
dic = {"A":"X",
       "B":"D",
       "C":"K",
       "D":"H",
       "E":"G",
       "F":"L",
       "G":"C",
       "H":"U",
       "I":"A",
       "J":"Q",
       "K":"V",
       'L':'F',
       'M':'W',
       'N':'O',
       'O':'T',
       'P':'S',
       'Q':'R',
       'R':'M',
       'S':'B',
       'T':'N',
       'U':'Y',
       'V':'Z',
       'W':'J',
       'X':'I',
       'Y':'P',
       'Z':'E'}

chaves = list(dic.keys())
valores = list(dic.values())
frase = "LOREM IPSUM MOLESTIE PORTA SOLLICITUDIN QUIS DOLOR TEMPUS ORNARE NISI CURABITUR MAECENAS, FELIS DONEC IACULIS SOCIOSQU INCEPTOS METUS LACUS EGESTAS TEMPOR SEM IN CONGUE, RHONCUS PRETIUM INCEPTOS ERAT LECTUS HENDRERIT AUGUE FACILISIS SAGITTIS DONEC. CURABITUR AUCTOR VULPUTATE PLATEA INTERDUM VOLUTPAT UT NUNC LIGULA, AENEAN HAC NIBH NISI VARIUS BLANDIT PRETIUM CURAE NULLA, SENECTUS NON TEMPOR DONEC PER RHONCUS SIT. NON ULTRICIES ETIAM CURAE VARIUS PROIN CURABITUR AENEAN, PULVINAR NIBH PORTTITOR PELLENTESQUE VELIT SEM, ELEMENTUM ULTRICIES ORCI URNA LOREM TURPIS. ALIQUET CURAE ELIT AENEAN SAGITTIS QUISQUE INTERDUM HABITASSE, AMET JUSTO LECTUS SEMPER EUISMOD ETIAM VARIUS, ADIPISCING FERMENTUM PRIMIS CONSECTETUR CRAS MASSA."
#frase = frse.upper()
NovaFrase = ""

for letra in frase:
    if letra in chaves:
        i = chaves.index(letra)
        a = valores[i]
    else:
        a = letra
    NovaFrase += a

print(NovaFrase)
        
#a = "FTMGW ASBYW WTFGBNAG STMNX BTFFAKANYHAO RYAB HTFTM NGWSYB TMOXMG OABA KYMXDANYM WXGKGOXB, LGFAB HTOGK AXKYFAB BTKATBRY AOKGSNTB WGNYB FXKYB GCGBNXB NGWSTM BGW AO KTOCYG, MUTOKYB SMGNAYW AOKGSNTB GMXN FGKNYB UGOHMGMAN XYCYG LXKAFABAB BXCANNAB HTOGK. KYMXDANYM XYKNTM ZYFSYNXNG SFXNGX AONGMHYW ZTFYNSXN YN OYOK FACYFX, XGOGXO UXK OADU OABA ZXMAYB DFXOHAN SMGNAYW KYMXG OYFFX, BGOGKNYB OTO NGWSTM HTOGK SGM MUTOKYB BAN. OTO YFNMAKAGB GNAXW KYMXG ZXMAYB SMTAO KYMXDANYM XGOGXO, SYFZAOXM OADU STMNNANTM SGFFGONGBRYG ZGFAN BGW, GFGWGONYW YFNMAKAGB TMKA YMOX FTMGW NYMSAB. XFARYGN KYMXG GFAN XGOGXO BXCANNAB RYABRYG AONGMHYW UXDANXBBG, XWGN QYBNT FGKNYB BGWSGM GYABWTH GNAXW ZXMAYB, XHASABKAOC LGMWGONYW SMAWAB KTOBGKNGNYM KMXB WXBBX."
#b = "FTMGW ASBYW WTFGBNAG STMNX BTFFAKANYHAO RYAB HTFTM NGWSYB TMOXMG OABA KYMXDANYM WXGKGOXB, LGFAB HTOGK AXKYFAB BTKATBRY AOKGSNTB WGNYB FXKYB GCGBNXB NGWSTM BGW AO KTOCYG, MUTOKYB SMGNAYW AOKGSNTB GMXN FGKNYB UGOHMGMAN XYCYG LXKAFABAB BXCANNAB HTOGK. KYMXDANYM XYKNTM ZYFSYNXNG SFXNGX AONGMHYW ZTFYNSXN YN OYOK FACYFX, XGOGXO UXK OADU OABA ZXMAYB DFXOHAN SMGNAYW KYMXG OYFFX, BGOGKNYB OTO NGWSTM HTOGK SGM MUTOKYB BAN. OTO YFNMAKAGB GNAXW KYMXG ZXMAYB SMTAO KYMXDANYM XGOGXO, SYFZAOXM OADU STMNNANTM SGFFGONGBRYG ZGFAN BGW, GFGWGONYW YFNMAKAGB TMKA YMOX FTMGW NYMSAB. XFARYGN KYMXG GFAN XGOGXO BXCANNAB RYABRYG AONGMHYW UXDANXBBG, XWGN QYBNT FGKNYB BGWSGM GYABWTH GNAXW ZXMAYB, XHASABKAOC LGMWGONYW SMAWAB KTOBGKNGNYM KMXB WXBBX."
#        
#if a == b:
#    t = True
#else:
#    t = False
#
#print(t)   
        
        
        
        
        